import nodemailer from "nodemailer";
import dotenv from "dotenv";
dotenv.config();

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

/**
 * Envoie un email personnalis√© (confirmation, modification ou annulation)
 * @param {Object} rdv - Donn√©es du rendez-vous
 * @param {"confirmation" | "modification" | "annulation"} type - Type de notification
 */
export async function sendNotificationEmail(rdv, type) {
  const { nom, prenom, its, date, heure, raison, type: rdvType } = rdv;

  let subject = "";
  let html = "";

  const fullName = `${prenom} ${nom}`;
  const formattedDate = new Date(date).toLocaleDateString("fr-FR");

  if (type === "confirmation") {
    subject = `‚úÖ Rendez-vous confirm√© avec ${rdvType}`;
    html = `
      <p>Salam ${fullName},</p>
      <p>Votre rendez-vous a bien √©t√© <b>confirm√©</b> pour :</p>
      <ul>
        <li><b>Date :</b> ${formattedDate}</li>
        <li><b>Heure :</b> ${heure}</li>
        <li><b>Raison :</b> ${raison}</li>
        <li><b>Type :</b> ${rdvType}</li>
        <li><b>Num√©ro ITS :</b> ${its}</li>
      </ul>
      <p>Barakallahoufik,<br>L'√©quipe Jamaat</p>
    `;
  } else if (type === "modification") {
    subject = `üìù Rendez-vous modifi√© - ${rdvType}`;
    html = `
      <p>Salam ${fullName},</p>
      <p>Votre rendez-vous a √©t√© <b>modifi√©</b>. Voici les nouvelles informations :</p>
      <ul>
        <li><b>Date :</b> ${formattedDate}</li>
        <li><b>Heure :</b> ${heure}</li>
        <li><b>Raison :</b> ${raison}</li>
        <li><b>Type :</b> ${rdvType}</li>
        <li><b>Num√©ro ITS :</b> ${its}</li>
      </ul>
    `;
  } else if (type === "annulation") {
    subject = `‚ùå Rendez-vous annul√© - ${rdvType}`;
    html = `
      <p>Salam ${fullName},</p>
      <p>Votre rendez-vous pr√©vu le ${formattedDate} √† ${heure} a √©t√© <b>annul√©</b>.</p>
      <p>Barakallahoufik.</p>
    `;
  }

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: process.env.EMAIL_USER, // L'adresse de l'admin, car pas d'email utilisateur
    subject,
    html,
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log(`üìß Email "${type}" envoy√© avec succ√®s.`);
  } catch (error) {
    console.error("Erreur envoi email:", error);
  }
}
